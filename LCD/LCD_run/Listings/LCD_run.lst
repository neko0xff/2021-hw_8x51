C51 COMPILER V9.60.0.0   LCD_RUN                                                           01/08/2022 19:07:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD_RUN
OBJECT MODULE PLACED IN .\Objects\LCD_run.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD_run.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD_run.lst) TABS(2) OBJECT(.\Objects\LCD_run.obj)

line level    source

   1          /* 
   2          *  File: LCD_run.c
   3          *  功能: 在LCD顯示字元'0'+在上排進行跑馬灯
   4          */
   5          #include "io51.h"
   6          
   7          /*LCD的顯示&副程式*/
   8          void delay(int x);
   9          void set_lcd();
  10          void put_ir(int data_word);
  11          void put_dr(int cntl_word);
  12          void cursor_home();
  13          void check_busy();
  14          
  15          /*主程式*/
  16          void main(){
  17   1          int i;
  18   1      
  19   1          set_lcd(); //設定LCD
  20   1          
  21   1          /*LCD顯示*/
  22   1          while(1){
  23   2             cursor_home(); //Clear LCD Display + 游標歸位(左上角)
  24   2           put_dr('0'); //輸出字元'A'
  25   2           
  26   2           /*跑馬灯*/
  27   2           for(i=0;i<16;i++){
  28   3              delay(10000); //delay 10sec
  29   3              put_ir(0x1C); //使游標與顯示同時右移
  30   3           }
  31   2          }
  32   1      }
  33          
  34          /*設定LCD*/
  35          void set_lcd(){
  36   1          put_ir(0x30); //設定8bit伝送+單排顯示
  37   1          put_ir(0x06); //在位元顯示後遊標往右移
  38   1          put_ir(0x0E); //LCD顯示致能且遊標出現+字元不閃爍
  39   1      }
  40          
  41          /*Clear LCD Display + 游標歸位(左上角)*/
  42          void cursor_home(){
  43   1          put_ir(0x01); //Clear LCD Display 
  44   1          put_ir(0x02); //游標歸位
  45   1      }
  46          
  47          /*寫入控制字元的副程式*/
  48          void put_ir(int data_word){
  49   1          check_busy(); //檢視LCD是否忙碌
  50   1          P1= data_word; //P1=送出LCD的控制碼
  51   1          P2= 0x00; //資料寫入到LCD的位址暫存器:RS=0,R/-W=0,E=0(LOW)
  52   1          P2= 0x04; //資料寫入到LCD的位址暫存器:RS=0,R/-W=0,E=1(HIGH)
  53   1          delay(100); //delay 100ms=0.1sec
  54   1          P2= 0x00; //資料寫入到LCD的位址暫存器:RS=0,R/-W=0,E=0(LOW)
C51 COMPILER V9.60.0.0   LCD_RUN                                                           01/08/2022 19:07:31 PAGE 2   

  55   1      }
  56          
  57          /*寫入資料的副程式*/
  58          void put_dr(int cntl_word){
  59   1          check_busy(); //檢視LCD是否忙碌
  60   1          P1= cntl_word; //P1=送出LCD的顯示碼
  61   1          P2= 0x01; //寫入LCD的位置暫存器:RS=1,R/-W=0,E=0(LOW)
  62   1          P2= 0x05; //讀LCD的位置暫存器:RS=1,R/-W=1,E=1(HIGH)
  63   1          delay(100); //delay 100ms=0.1sec
  64   1          P2= 0x01; //RS=1,R/-W=0,E=0(LOW)
  65   1      }
  66          
  67          /*檢視LCD是否忙碌 */
  68          void check_busy(){
  69   1          int busy_flag;
  70   1      
  71   1          P2=0x02; //資料寫入LCD的指令暫存器:RS=0,R/-W=1,E=0(LOW)
  72   1          P2=0x06; //資料寫入LCD的指令暫存器:RS=0,R/-W=1,E=1(HIGH)
  73   1          delay(100); //delay 100ms=0.1sec
  74   1        
  75   1        READ_AGAIN:
  76   1          busy_flag=P1; //經由P1讀取LCD的狀態字組
  77   1          busy_flag&=0x80; //保留狀態字組的最高位元
  78   1          
  79   1          /*最高位元判斷*/
  80   1          if(busy_flag == 0x80){ //if 最高位元=1
  81   2              goto READ_AGAIN; //讀取狀態字組
  82   2          }else{ //else 最高位元=0
  83   2              P2=0x02; //資料寫入LCD的指令暫存器:RS=0,R/-W=1,E=0(LOW)
  84   2          }
  85   1      }
  86          
  87          /*delay time*/
  88          void delay(int x){
  89   1          int m;
  90   1          for(m=0;m<x;m++);
  91   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
